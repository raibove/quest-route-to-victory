id: guard_the_gates
learningObjectives: 
- Create a PrivateRoute component which will redirect the user to Login Page if user try to access restricted pages without authentication.
hints:
- User will need to create a new component called as `PrivateRoute`.
- You can use `react-router-dom` to handle the logic.
- User can refer to the example from documentaion to understand how to create private route https://v5.reactrouter.com/web/example/auth-workflow
startFlow:
  do:
  - actionId: bot_message
    params:
      person: keen
      messages:
      - text: "So, after investigating the issue, we've determined that the problem lies with the routing of our website. Few pages like **settings** and **editor** page are not properly protected, allowing unauthenticated users to access them. To prevent this from happening in the future, our team has decided to resolve the issue."
        delay: 3500
      - text: "To fix this, you need to create a React Component called as `PrivateRoute` that will handle protection of these pages."
        delay: 3500
      - text: "Can you please create a `PrivateRoute` component and add necessary logic to ensure only authenticated users can access the restricted pages. Create a PR once you are done."
        delay: 3500
      - text: "Don't hesitate to ask my help!!"
        delay: 5800
trigger:
  type: github_pr_lifecycle_status
  flowNode:
    switch:
      key: "${eventType}"
      cases:
        github_pr_opened:
          do:
          - actionId: bot_message
            params:
              person: keen
              messages:
              - text: "On it, I'll review the changes right away."
                delay: 1000
          - actionId: github_pr_comment
            params:
              person: keen
              message: "On it, I'll review the changes right away."
          if:
            conditions:
            - conditionId: github_is_file_added
              equals: false
              params:
                fileName: frontend/src/components/PrivateRoute.js
            then:
              do:
              - actionId: bot_message
                params:
                  person: keen
                  messages:
                    - text: "Umm, that doesn't look right. Did you create PrivateRoute.js in components folder?"
                      delay: 1400
              - actionId: github_pr_reject
                params:
                  person: keen
                  message: "Umm, that doesn't look right. Did you create PrivateRoute.js in components folder?"
        github_pr_workflow_complete_success:
          do:
          - actionId: bot_message
            params:
              person: keen
              messages:
              - text: "This looks great! Just approved. Go ahead and merge."
                delay: 2000
          - actionId: github_pr_approve
            params:
              person: keen
              message: "Nailed it! Excellent job @${user.githubuser}! You can now merge the PR."
        github_pr_workflow_complete_failure:
          do:
          - actionId: bot_message
            params:
              person: keen
              messages:
              - text: "Make sure your fix passes all the checks, then try again please."
                delay: 3000
          - actionId: github_pr_reject
            params:
              person: keen
              message: "Looks like this code change didnâ€™t fix the problem. Can you take a second look?"
        github_pr_merged:
          do:
          - actionId: finish_step
githubActions:
  backend:
  frontend:
    capabilities:
    - \@testing-library/react@12.1.5
    testFile: "private_routes.test.js"